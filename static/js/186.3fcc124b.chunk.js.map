{"version":3,"file":"static/js/186.3fcc124b.chunk.js","mappings":"kMAsDA,UAlDgB,WACd,IAAAA,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdG,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,GAAU,UAAWH,GAClBI,MAAK,SAAAC,GAAkB,IAAfC,EAAOD,EAAPC,QACFA,EAAQC,QAIbZ,EAAWW,GACXP,EAAS,KAJPA,EAAS,aAKb,IACCS,OAAM,kBAAMT,EAAS,oBAAoB,GAC9C,GAAG,CAACC,KAGFS,EAAAA,EAAAA,KAAA,OAAAC,SACa,KAAVZ,GACCW,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGhB,EAAQiB,KAAI,SAAAC,GAAM,OACjBC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEG,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,WAASE,EAAOE,WACnBL,EAAAA,EAAAA,KAAA,KAAAC,SACGE,EAAOG,QAAQR,OAAS,IACrBK,EAAOG,QAAO,GAAAC,OACXJ,EAAOG,QAAQE,MAAM,EAAG,KAAI,SAEpCL,EAAOG,QAAQR,OAAS,MACvBE,EAAAA,EAAAA,KAAA,KAAGS,KAAMN,EAAOO,IAAKC,OAAO,QAAOV,SAAC,uBAR/BE,EAAOS,GAYX,QAKXvB,GAIR,C,kGClDMwB,EAAM,+BACNC,EAAM,mCAEL,SAAepB,EAASqB,EAAAC,EAAAC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAoB9B,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MApBM,SAAAC,EAAyBC,EAAMZ,EAAIa,GAAK,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,IAAAA,MAAA,SAAAO,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAY3C,OAXIL,EAAW,CACfnC,QAAQ,UAADgB,OAAYK,GACnBoB,KAAK,UAADzB,OAAYK,EAAE,YAClB3B,QAAQ,UAADsB,OAAYK,EAAE,YACrBqB,OAAQ,gBACRC,SAAU,uBAGNP,EAAe,IAAIQ,gBAAgB,CACvCV,MAAOA,EACPW,eAAe,IACfP,EAAAE,KAAA,EAEoBM,EAAAA,EAAAA,IAAU,GAAD9B,OAC1BM,GAAGN,OAAGmB,EAASF,GAAK,aAAAjB,OAAYO,EAAG,KAAAP,OAC3B,WAATiB,EAAoBG,EAAe,KAErC,KAAD,EAJY,OAAPC,EAAOC,EAAAS,KAAAT,EAAAU,OAAA,SAKNX,EAAQY,MAAI,wBAAAX,EAAAY,OAAA,GAAAlB,EAAA,MACpBJ,MAAA,KAAAC,UAAA,C","sources":["components/Reviews/Reviews.jsx","services/themoviedb-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchData } from 'services/themoviedb-api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    fetchData('reviews', movieId)\n      .then(({ results }) => {\n        if (!results.length) {\n          setError('No reviews');\n          return;\n        }\n        setReviews(results);\n        setError('');\n      })\n      .catch(() => setError('Please, try again'));\n  }, [movieId]);\n\n  return (\n    <div>\n      {error === '' ? (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>\n                  {review.content.length < 500\n                    ? review.content\n                    : `${review.content.slice(0, 500)}...`}\n                </p>\n                {review.content.length > 500 && (\n                  <a href={review.url} target=\"blank\">\n                    Read full review\n                  </a>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        error\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = '52fe94b8e19a93eac61192960d23427b';\n\nexport async function fetchData(type, id, query) {\n  const endpoint = {\n    movieId: `/movie/${id}`,\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n    search: '/search/movie',\n    trending: '/trending/movie/day',\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: false,\n  });\n\n  const request = await axios.get(\n    `${URL}${endpoint[type]}?api_key=${KEY}&${\n      type === 'search' ? searchParams : ''\n    }`\n  );\n  return request.data;\n}\n"],"names":["_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","error","setError","movieId","useParams","useEffect","fetchData","then","_ref","results","length","catch","_jsx","children","map","review","_jsxs","author","content","concat","slice","href","url","target","id","URL","KEY","_x","_x2","_x3","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","type","query","endpoint","searchParams","request","_context","prev","next","cast","search","trending","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}