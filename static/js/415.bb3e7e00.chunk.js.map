{"version":3,"file":"static/js/415.bb3e7e00.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/themoviedb-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  margin: 0 500px;\n`;\n\nexport const LinkItem = styled(Link)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 200px;\n  transition: transform 250ms ease-in-out;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  display: flex;\n  align-content: center;\n  margin: 0 auto;\n  width: 200px;\n  height: 280px;\n`;\n\nexport const Image = styled.img`\n  border-radius: 4px;\n  width: 100%;\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n`;\n\nexport const Rating = styled.div`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: 1px solid white;\n  background-color: ${({ $color }) => $color};\n  color: white;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  LinkItem,\n  Image,\n  ImgWrap,\n  List,\n  Rating,\n  Title,\n} from './MoviesList.styled';\nimport filmIcon from 'images/film_icon.png';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <LinkItem\n            to={\n              location.pathname === '/' ? `movies/${movie.id}` : `${movie.id}`\n            }\n            state={{ from: location }}\n          >\n            <ImgWrap>\n              <Image\n                src={\n                  movie.poster_path\n                    ? `${POSTERS_URL}w200${movie.poster_path}`\n                    : filmIcon\n                }\n                alt={movie.title}\n              />\n            </ImgWrap>\n            <Title>{movie.title}</Title>\n            <p>\n              {movie.release_date\n                ? new Date(movie.release_date).toLocaleDateString(\n                    'en-US',\n                    dateOptions\n                  )\n                : ''}\n            </p>\n            <Rating\n              $color={ratingColorDetect(Math.round(movie.vote_average * 10))}\n            >\n              {movie.vote_average === 0\n                ? 'NR'\n                : `${Math.round(movie.vote_average * 10)}%`}\n            </Rating>\n          </LinkItem>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nfunction ratingColorDetect(number) {\n  let color;\n  if (!number) {\n    color = 'grey';\n  } else if (number < 50) {\n    color = 'red';\n  } else if (number < 70) {\n    color = 'orange';\n  } else if (number >= 70) {\n    color = 'green';\n  }\n  return color;\n}\n","import { useEffect, useState } from 'react';\nimport { fetchData } from 'services/themoviedb-api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchData('trending')\n      .then(({ results }) => {\n        if (!results.length) {\n          setError('Please, try again');\n          return;\n        }\n        setMovies(results);\n        setError('');\n      })\n      .catch(() => setError('Please, try again'));\n  }, []);\n\n  return <div>{error === '' ? <MoviesList movies={movies} /> : error}</div>;\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = '52fe94b8e19a93eac61192960d23427b';\n\nexport async function fetchData(type, id, query) {\n  const endpoint = {\n    movieId: `/movie/${id}`,\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n    search: '/search/movie',\n    trending: '/trending/movie/day',\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: false,\n  });\n\n  const request = await axios.get(\n    `${URL}${endpoint[type]}?api_key=${KEY}&${\n      type === 'search' ? searchParams : ''\n    }`\n  );\n  return request.data;\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","LinkItem","Link","_templateObject2","ImgWrap","_templateObject3","Image","_templateObject4","Title","_templateObject5","Rating","_templateObject6","_ref","$color","movies","location","useLocation","dateOptions","year","month","day","_jsx","children","map","movie","_jsxs","to","pathname","concat","id","state","from","src","poster_path","filmIcon","alt","title","release_date","Date","toLocaleDateString","ratingColorDetect","Math","round","vote_average","number","color","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","error","setError","useEffect","fetchData","then","results","length","catch","MoviesList","URL","KEY","_x","_x2","_x3","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","type","query","endpoint","searchParams","request","_context","prev","next","movieId","cast","reviews","search","trending","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}