{"version":3,"file":"static/js/83.999979fc.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/themoviedb-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 100px;\n  justify-content: center;\n`;\n\nexport const Information = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 400px;\n`;\n\nexport const Span = styled.span`\n  font-weight: 500;\n`;\n","import { Container, Information, Span } from './MovieInfo.styled';\nimport filmIcon from 'images/film_icon.png';\n\nconst POSTER = 'https://image.tmdb.org/t/p/';\n\nconst dateOptions = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n};\n\nconst MovieInfo = ({ movieData }) => {\n  return (\n    <Container>\n      <img\n        src={\n          movieData.poster_path\n            ? `${POSTER}w500${movieData.poster_path}`\n            : filmIcon\n        }\n        alt={movieData.title}\n      />\n      <Information>\n        <h1>{`${movieData.title} (${\n          movieData.release_date\n            ? new Date(movieData.release_date).getFullYear()\n            : 'No information'\n        })`}</h1>\n        <p>\n          <Span>Release date:</Span>{' '}\n          {new Date(movieData.release_date).toLocaleDateString(\n            'en-US',\n            dateOptions\n          )}\n        </p>\n        <p>\n          <Span>Rating: </Span>\n          {movieData.vote_average === 0\n            ? 'No rated'\n            : `${Math.round(movieData.vote_average * 10)}%`}\n        </p>\n        <p>\n          <Span>Genres:</Span>{' '}\n          {movieData.genres.map(({ name }) => name).join(', ') || 'None'}\n        </p>\n        <p>\n          <Span>Promo:</Span> {movieData.tagline || 'None'}\n        </p>\n        <p>\n          <Span>Overview:</Span> {movieData.overview || 'None'}\n        </p>\n      </Information>\n    </Container>\n  );\n};\nexport default MovieInfo;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLinkStyled = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { fetchData } from 'services/themoviedb-api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { NavLinkStyled } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { state } = useLocation();\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchData('movieId', Number(movieId))\n      .then(results => {\n        setMovieData(results);\n        setError('');\n      })\n      .catch(() => {\n        setError('An error has occurred. You are redirected to the home page.');\n        setTimeout(() => {\n          navigate('/');\n        }, 2000);\n      });\n  }, [movieId, navigate]);\n\n  return (\n    <>\n      <Link to={state?.from ?? '/'}>Go back</Link>\n\n      {error === '' && movieData ? (\n        <>\n          <MovieInfo movieData={movieData} />\n\n          <ul>\n            <li>\n              <NavLinkStyled to=\"cast\" state={{ from: state?.from }}>\n                Cast\n              </NavLinkStyled>\n            </li>\n            <li>\n              <NavLinkStyled to=\"reviews\" state={{ from: state?.from }}>\n                Reviews\n              </NavLinkStyled>\n            </li>\n          </ul>\n\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        error\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = '52fe94b8e19a93eac61192960d23427b';\n\nexport async function fetchData(type, id, query) {\n  const endpoint = {\n    movieId: `/movie/${id}`,\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n    search: '/search/movie',\n    trending: '/trending/movie/day',\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: false,\n  });\n\n  const request = await axios.get(\n    `${URL}${endpoint[type]}?api_key=${KEY}&${\n      type === 'search' ? searchParams : ''\n    }`\n  );\n  return request.data;\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Information","_templateObject2","Span","_templateObject3","dateOptions","year","month","day","_ref","movieData","_jsxs","children","_jsx","src","poster_path","concat","filmIcon","alt","title","release_date","Date","getFullYear","toLocaleDateString","vote_average","Math","round","genres","map","_ref2","name","join","tagline","overview","NavLinkStyled","NavLink","_state$from","state","useLocation","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovieData","navigate","useNavigate","_useState3","_useState4","error","setError","useEffect","fetchData","Number","then","results","catch","setTimeout","_Fragment","Link","to","from","MovieInfo","Suspense","fallback","Loader","Outlet","URL","KEY","_x","_x2","_x3","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","type","id","query","endpoint","searchParams","request","_context","prev","next","cast","reviews","search","trending","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}